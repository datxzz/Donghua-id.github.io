<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitShort - URL Shortener</title>
    <style>
        :root {
            --primary: #238636;
            --bg: #0d1117;
            --card: #161b22;
            --text: #c9d1d9;
            --border: #30363d;
            --success: #3fb950;
            --error: #f85149;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--bg);
            color: var(--text);
            padding: 20px;
            line-height: 1.5;
            min-height: 100vh;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
        }
        header {
            text-align: center;
            margin-bottom: 30px;
        }
        .card {
            background: var(--card);
            border-radius: 6px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid var(--border);
        }
        input, button {
            width: 100%;
            padding: 10px 12px;
            margin-bottom: 10px;
            border-radius: 6px;
            border: 1px solid var(--border);
            background: var(--card);
            color: var(--text);
            font-size: 14px;
        }
        button {
            background: var(--primary);
            color: white;
            border: none;
            cursor: pointer;
            transition: background 0.2s;
        }
        button:hover {
            background: #2ea043;
        }
        #result {
            display: none;
        }
        #redirect {
            display: none;
            text-align: center;
            padding: 40px 20px;
        }
        .history-item {
            padding: 10px 0;
            border-bottom: 1px solid var(--border);
            margin-bottom: 10px;
        }
        .history-item:last-child {
            border-bottom: none;
        }
        #emptyHistory {
            text-align: center;
            color: var(--text);
            opacity: 0.7;
            padding: 20px 0;
        }
    </style>
</head>
<body>
    <div id="app" class="container">
        <header>
            <h1>GitShort</h1>
            <p>URL Shortener untuk GitHub Pages</p>
        </header>

        <div class="card">
            <input type="url" id="urlInput" placeholder="https://example.com/very-long-url" required>
            <button id="generateBtn">Buat Link Pendek</button>
        </div>

        <div id="result" class="card">
            <h2>Link Pendek Anda:</h2>
            <div class="short-url">
                <a id="shortLink" target="_blank"></a>
            </div>
            <button id="copyBtn">Salin Link</button>
        </div>

        <div class="card" id="history">
            <h2>Riwayat Link</h2>
            <div id="historyList">
                <p id="emptyHistory">Belum ada riwayat</p>
            </div>
        </div>
    </div>

    <div id="redirect" class="container">
        <div class="card">
            <h2>Mengarahkan...</h2>
            <p id="redirectText">Harap tunggu sebentar</p>
            <a id="manualRedirect" class="manual-link">Klik ini jika tidak redirect otomatis</a>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize elements
            const app = document.getElementById('app');
            const urlInput = document.getElementById('urlInput');
            const result = document.getElementById('result');
            const shortLink = document.getElementById('shortLink');
            const copyBtn = document.getElementById('copyBtn');
            const historyList = document.getElementById('historyList');
            const emptyHistory = document.getElementById('emptyHistory');
            const redirect = document.getElementById('redirect');
            const redirectText = document.getElementById('redirectText');
            const manualRedirect = document.getElementById('manualRedirect');

            // GitHub Pages compatible redirect handler
            const hash = window.location.hash.substring(1);
            if (hash) {
                handleRedirect(hash);
                return;
            }

            // Load history on startup
            loadHistory();

            // Setup event listeners
            document.getElementById('generateBtn').addEventListener('click', createShortLink);
            copyBtn.addEventListener('click', copyShortLink);

            function createShortLink() {
                const longUrl = urlInput.value.trim();
                
                if (!isValidUrl(longUrl)) {
                    showError('Masukkan URL yang valid (contoh: https://example.com)');
                    return;
                }

                const code = generateCode();
                const shortUrl = `${window.location.origin}/#${code}`;

                // Save to storage
                const linkData = {
                    url: longUrl,
                    shortUrl: shortUrl,
                    code: code,
                    created: new Date().toISOString(),
                    clicks: 0
                };
                localStorage.setItem(`git_${code}`, JSON.stringify(linkData));

                // Show result
                shortLink.textContent = shortUrl;
                shortLink.href = longUrl;
                result.style.display = 'block';
                
                // Reload history
                loadHistory();
                
                // Clear input
                urlInput.value = '';
            }

            function handleRedirect(code) {
                app.style.display = 'none';
                redirect.style.display = 'block';
                
                const linkData = JSON.parse(localStorage.getItem(`git_${code}`));

                if (linkData && linkData.url) {
                    // Update click count
                    linkData.clicks++;
                    localStorage.setItem(`git_${code}`, JSON.stringify(linkData));
                    
                    redirectText.textContent = `Mengarahkan ke: ${linkData.url}`;
                    manualRedirect.href = linkData.url;
                    manualRedirect.textContent = linkData.url;
                    
                    // Redirect after 1 second
                    setTimeout(() => {
                        window.location.href = linkData.url;
                    }, 1000);
                } else {
                    redirect.innerHTML = `
                        <div class="card">
                            <h2>Link Tidak Ditemukan</h2>
                            <p>Kode ${code} tidak valid atau sudah kadaluarsa</p>
                            <a href="${window.location.origin}" class="manual-link">Kembali ke halaman utama</a>
                        </div>
                    `;
                }
            }

            function loadHistory() {
                const history = [];
                // Get all keys from localStorage
                for (let i = 0; i < localStorage.length; i++) {
                    const key = localStorage.key(i);
                    if (key.startsWith('git_')) {
                        const linkData = JSON.parse(localStorage.getItem(key));
                        history.push(linkData);
                    }
                }
                
                // Sort by creation date (newest first)
                history.sort((a, b) => new Date(b.created) - new Date(a.created));
                
                if (history.length === 0) {
                    emptyHistory.style.display = 'block';
                    historyList.innerHTML = '';
                    return;
                }
                
                emptyHistory.style.display = 'none';
                historyList.innerHTML = '';
                
                history.forEach(item => {
                    const historyItem = document.createElement('div');
                    historyItem.className = 'history-item';
                    historyItem.innerHTML = `
                        <h3>${item.shortUrl}</h3>
                        <p>${item.url}</p>
                        <small>${item.clicks} klik â€¢ Dibuat: ${formatDate(item.created)}</small>
                    `;
                    historyList.appendChild(historyItem);
                });
            }

            function copyShortLink() {
                navigator.clipboard.writeText(shortLink.textContent)
                    .then(() => {
                        copyBtn.textContent = 'Tersalin!';
                        setTimeout(() => {
                            copyBtn.textContent = 'Salin Link';
                        }, 2000);
                    })
                    .catch(err => {
                        console.error('Gagal menyalin:', err);
                        alert('Gagal menyalin link');
                    });
            }

            function showError(message) {
                alert(message);
            }

            function isValidUrl(url) {
                try {
                    new URL(url);
                    return true;
                } catch {
                    return false;
                }
            }

            function generateCode() {
                return Math.floor(100000 + Math.random() * 900000); // 6-digit code
            }

            function formatDate(dateString) {
                const options = { 
                    year: 'numeric', 
                    month: 'short', 
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                };
                return new Date(dateString).toLocaleDateString('id-ID', options);
            }
        });
    </script>
</body>
</html>
